@startuml stream_parser
hide empty members
namespace pdfparser {
class istream_extended<InputStreamT> {
	-m_stream : InputStreamT

	+istream_extended(inout stream : InputStreamT&&)
	+istream_extended(const InputStreamT&&) = delete
	+istream_extended(InputStreamT&)        = delete

	+peek() : optional<InputStreamT::char_type>
	+get()  : InputStreamT::char_type
	+eof()  : bool

	+tell()                                        : InputStreamT::off_type
	+seek(in byte_offset : InputStreamT::off_type) : void
	+seek_to_end()                                 : void
	+seek_forward_head_of_line()                   : void
	+operator++()                                  : istream_extended&

	' TODO: これが空白類限定なのをやめたい
	+ignore_if_present(in flags : whitespace_flags)           : void
	+attempt(in attempt_str : string_view)                    : bool
	+promise(in promise_list : initializer_list<string_view>) : void
}
istream_extended --> "1" InputStreamT
istream_extended ..> whitespace_flags
istream_extended ..> istream_extended_error

enum whitespace_flags <<Enumeration>> {
	[[whitespace_flags.class.pu]]
}
class istream_extended_error {
	[[istream_extended_error.class.pu]]
}
}
@enduml
