@startuml parser
namespace pdfparser {
enum require_type {
	EOF
	EOL
	startxref
}
enum ignore_flags {
	null = 1
	horizontal_tab = 2
	line_feed = 4
	form_feed = 8
	carriage_return = 16
	space = 32
	comment = 64
	eol = line_feed | carriage_return
	any_whitespace_characters = null | horizontal_tab | line_feed | form_feed | carriage_return | space | eol
	any_whitespace_characters_except_EOL = any_whitespace_characters & ~eol
}
class parser {
	-enum require_type
	-enum ignore_flags
	-m_stream : std::istream
	-m_xref_byte_offset : decltype(m_stream.tellg())

	+parser(std::istream&& istr)
	-take_footer() : void
	-take_xref_byte_offset() : void

	-require(require_type req_type) : void
	-ignore_if_present(const std::bitset<7>& flags) : void
	-take_signed_integer() : intmax_t
	-take_unsigned_integer() : uintmax_t
}
enum error_code {
	EOF_not_found
	EOF_invalid
	EOL_not_found
	xref_byte_offset_not_found
	startxref_not_found
	signed_integer_not_found
	unsigned_integer_not_found
}
class syntax_error {
	-m_error_code : error_code

	+syntax_error(const error_code& error_code)
	+code() : error_code
}
syntax_error --|> std::runtime_error
class overflow_or_underflow_error {
}
overflow_or_underflow_error --|> std::overflow_error
overflow_or_underflow_error --|> std::underflow_error
}
@enduml
