@startuml page_tree_parser
partition "page_tree_parser(stream : ipdfstream&, root_node : const dictionary_object&)" {
start
	:m_stream    = stream;
	:m_root_node = root_node;
stop
}
@enduml

@startuml get_pages
partition "get_pages()" {
start
	:return get_pages(m_root_node, {});
stop
}
@enduml

@startuml get_pages_recursive
partition "get_pages(page_node : const dictionary_object&, inherited_attributes : const dictionary_object&)" {
start
	if ("Pages" == page_node.at("Type")) then (y)
		:new_inherited_attributes = inherited_attributes;
		while (entry in page_node) is (y)
			' Resources, MediaBox, CropBox, Rotate
			if (継承できるキー(entry->first)) then (y)
				:new_inherited_attributes.insert_or_assign(entry->first, entry->second);
			endif
		endwhile

		:pages = List<PDFPage>;
		while (kid in page_node.at("Kids")) is (y)
			:pages.AddRanges(get_pages(kid, new_inherited_attributes));
		endwhile
		:return pages;
		stop
	elseif ("Page" == page_node.at("Type")) then (y)
		:complete_page_object = page_node;
		:complete_page_object.insert(inherited_attributes.begin(), inherited_attributes.end());

		:this_page_parser : page_parser(m_stream, complete_page_object);
		:return this_page_parser.get_page(complete_page_object);
	else
		:throw document_error();
		stop
	endif
stop
}
@enduml
