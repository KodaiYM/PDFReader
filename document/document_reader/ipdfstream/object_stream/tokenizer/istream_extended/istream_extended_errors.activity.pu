@startuml failed_to_get
partition "failed_to_get(in position : std::streampos)" {
start
	:position_indicatable_error(position, "次の文字の取得に失敗しました。");
stop
}
@enduml

@startuml failed_to_seek
partition "failed_to_seek(in seekpos : std::streampos)" {
start
	:document_error(seekpos + "バイト目にシーク出来ませんでした。");
stop
}
@enduml

@startuml failed_to_seek_forward_head_of_line
partition "failed_to_seek_forward_head_of_line(in position : std::streampos)" {
start
	:position_indicatable_error(position, "前の行にシーク出来ませんでした。");
stop
}
@enduml

@startuml promise_failed
partition "promise_failed<InputIterator>(in position : std::streampos, in first : InputIterator, in last : InputIterator)" {
start
	:message : stringstream;
	:message << "以下の文字列のいずれかの文字列を期待しましたが、いずれも取得できませんでした。\\n";

	while (promise_str in [first, last)) is (y)
		:message << promise_str;
		:message << " (";
		:old_flags = message.setf(std::ios_base::hex | std::ios_base::uppercase);
		while (character in promise_str) is (y)
			:message << static_cast<unsigned int>(character);
		endwhile
		:message.flags(old_flags);
		:message << ")";
		:message << '\\n';
	endwhile

	:position_indicatable_error(position, message.str());
stop
}
@enduml
