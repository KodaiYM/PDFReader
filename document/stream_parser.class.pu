@startuml stream_parser
hide empty members
namespace pdfparser {
class stream_parser<InputStreamT> {
	-m_tokenizer : tokenizer

	+stream_parser(inout stream : InputStreamT&&)
	+stream_parser(const InputStreamT&&) = delete
	+stream_parser(InputStreamT&)        = delete

	+take_footer(inout object_accessor : object_pool<InputStreamT>&)  : dictionary_object
	+take_xref_table()                                                : xref_table
	+take_xref_entry(in object_number : object_t)                     : xref_entry
	+take_trailer(inout object_accessor : object_pool<InputStreamT>&) : dictionary_object

	+take_object<variant<...>>() : variant<...>
	+take_object<variant<...>>(inout object_accessor : object_pool<InputStreamT>&) : variant<...>
	+take_object<...ObjectTypes>() : variant<ObjectTypes...>
	+take_object<...ObjectTypes>(inout object_accessor : object_pool<InputStreamT>&) : variant<ObjectTypes...>
	+take_boolean_object    () : boolean_object
	+take_integer_object    () : integer_object
	+take_real_object       () : real_object
	+take_string_object     () : string_object
	+take_name_object       () : name_object
	+take_array_object      (inout object_accessor : object_pool<InputStreamT>&) : array_object
	+take_dictionary_object (inout object_accessor : object_pool<InputStreamT>&) : dictionary_object
	+take_stream_object     (inout object_accessor : object_pool<InputStreamT>&) : stream_object
	+take_null_object       () : null_object
	+take_indirect_reference() : indirect_reference

	+take_indirect_object(inout object_accessor : object_pool<InputStreamT>&, in object_info : const xref_inuse_entry&) : any_direct_object
}
stream_parser --> "1" tokenizer
stream_parser ..> xref_types
stream_parser ..> object_types
stream_parser <..> object_pool
stream_parser ..> parse_error
stream_parser ..> object_not_found_error

class tokenizer {
	[[tokenizer.class.pu]]
}
annotation xref_types <<(N, yellow) namespace>> {
	[[xref_types.class.pu]]
}
annotation object_types <<(N, yellow) namespace>> {
	[[object_types.class.pu]]
}
class object_pool<InputStreamT> {
	[[object_pool.class.pu]]
}
class parse_error {
	[[parse_error.class.pu]]
}
class object_not_found_error {
	[[object_not_found_error.class.pu]]
}
}
@enduml
